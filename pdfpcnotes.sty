%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% pdfpcnotes.sty
%
% Create notes for PDFPC from a beamer file
%
% Copyright 2013       Carsten Brandt <mail@cebe.cc>
% Copyright 2013       Aggelos Karalias <aggelos.karalias@gmail.com>
% Copyright 2014-2016  RaphaÃ«l Beamonte <raphael.beamonte@gmail.com>
% Copyright 2015       Bence Ferdinandy <bence@ferdinandy.com>
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\ProvidesPackage%
	{pdfpcnotes}%
	[2016/05/04 \space ver 0.2 \space To generate notes to use with pdfpc]

\RequirePackage{forloop}
\RequirePackage{pdftexcmds}

\RequirePackage{kvoptions}
\DeclareStringOption{fontsize}[32130]
\ProcessKeyvalOptions*\relax

% create a new file handle
\newwrite\pdfpcnotesfile

\def\activateCtrlChars{%
	\catcode`\^^I=\active%
	\catcode`\^^M=\active%
	\begingroup\lccode`~=`\^^I\lowercase{\endgroup\def~}{&}%
	\begingroup\lccode`~=`\^^M\lowercase{\endgroup\def~}{\\}%
}
\begingroup%
\obeylines%
\gdef\gobbleLineBreak{\@ifnextchar^^M{\@gobble}{}}%
\endgroup%

% open file on \begin{document}
\AtBeginDocument{%
	\immediate\openout\pdfpcnotesfile\jobname.pdfpc\relax
	\immediate\write\pdfpcnotesfile{[file]}
	\immediate\write\pdfpcnotesfile{\jobname.pdf}
	\ifx\pdfpcnotes@fontsize\@empty
	\else
		\immediate\write\pdfpcnotesfile{[font_size]^^J\pdfpcnotes@fontsize}
	\fi
	\immediate\write\pdfpcnotesfile{[notes]}
}
% define a # http://tex.stackexchange.com/a/37757/10327
\begingroup
	\catcode`\#=12
	\gdef\hashchar{#}%
\endgroup


\global\def\pdfpcnotes@lastframenumber{0}
\newcounter{pdfpcnotes@currentframenotes}
\newcounter{pdfpcnotes@checkifnoteexists}
\newif\ifpdfpcnotes@noteexists

% define command \pnote{} that works like note but
% an auxiliary command that should then receive the newlines...
\newcommand{\pnotenew}{%
  \begingroup\activateCtrlChars\fetchPnoteArg
}

% The auxiliary command that should receive the newlines
% additionally writes notes to file in pdfpc readable format
\newcommand<>{\fetchPnoteArg}[2][]{%
	% keep normal notes working
	\note#3[#1]{#2}%
%
	\ifdim\theframenumber pt>\pdfpcnotes@lastframenumber pt%
		\global\edef\pdfpcnotes@lastframenumber{\theframenumber}%
		\setcounter{pdfpcnotes@currentframenotes}{0}%
		\begingroup%
			\let\#\hashchar%
			\immediate\write\pdfpcnotesfile{\#\#\# \theframenumber}%
		\endgroup%
	\fi%
%
	% check if note was already stored
	\pdfpcnotes@noteexistsfalse%
	\forloop{pdfpcnotes@checkifnoteexists}{0}{%
		\value{pdfpcnotes@checkifnoteexists} < \value{pdfpcnotes@currentframenotes}%
	}{%
		\ifnum\pdf@strcmp{\unexpanded{#2}}{\csname pdfpcnotes@currentframenotes@\thepdfpcnotes@checkifnoteexists\endcsname}=0%
			\pdfpcnotes@noteexiststrue%
			\setcounter{pdfpcnotes@checkifnoteexists}{\value{pdfpcnotes@currentframenotes}}%
		\else%
		\fi%
	}%
%
	% and then, only if the note was not stored
	\ifpdfpcnotes@noteexists%
	\else%
		% add note in stored notes
		\expandafter\global\expandafter\def\csname pdfpcnotes@currentframenotes@\thepdfpcnotes@currentframenotes\endcsname{\unexpanded{#2}}%
		\stepcounter{pdfpcnotes@currentframenotes}%
%
		% write note to file
		\begingroup%
			\def\\{^^J}%
			\def\par{^^J^^J}%
			\immediate\write\pdfpcnotesfile{#2}%
		\endgroup%
	\fi%

	\endgroup%

}
% close file on \begin{document}
\AtEndDocument{%
	\immediate\closeout\pdfpcnotesfile
}
